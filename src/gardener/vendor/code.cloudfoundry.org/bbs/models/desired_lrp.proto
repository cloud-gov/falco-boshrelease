syntax = "proto2";

package models;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "actions.proto";
import "cached_dependency.proto";
import "certificate_properties.proto";
import "environment_variables.proto";
import "modification_tag.proto";
import "network.proto";
import "security_group.proto";
import "volume_mount.proto";
import "check_definition.proto";

message DesiredLRPSchedulingInfo {
  optional DesiredLRPKey desired_lrp_key = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];

  optional string annotation = 2;
  optional int32 instances = 3;

  optional DesiredLRPResource desired_lrp_resource = 4 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];

  optional ProtoRoutes routes = 5 [(gogoproto.nullable) = false, (gogoproto.customtype) = "Routes"];
  optional ModificationTag modification_tag = 6 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];
  optional VolumePlacement volume_placement = 7 [(gogoproto.jsontag) = "volume_placement,omitempty"];
  repeated string PlacementTags = 8 [(gogoproto.jsontag) ="placement_tags,omitempty"];
}

message DesiredLRPRunInfo {
  optional DesiredLRPKey desired_lrp_key = 1 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "", (gogoproto.embed) = true];

  repeated EnvironmentVariable environment_variables = 2 [(gogoproto.jsontag) = "env", (gogoproto.nullable) = false];
  optional Action setup = 3;
  optional Action action = 4;
  optional Action monitor = 5;

  optional uint32 deprecated_start_timeout_s = 6 [(gogoproto.jsontag) = "start_timeout,omitempty", deprecated=true];

  optional bool privileged = 7;

  optional uint32 cpu_weight = 8;
  repeated uint32 ports = 9;
  repeated SecurityGroupRule egress_rules = 10 [(gogoproto.nullable) = false];
  optional string log_source = 11;
  optional string metrics_guid = 12;
  optional int64 created_at = 13;
  repeated CachedDependency cached_dependencies = 14 [(gogoproto.jsontag) = "cached_dependencies,omitempty"];
  optional string legacy_download_user = 15 [(gogoproto.jsontag) = "legacy_download_user,omitempty"];
  optional string trusted_system_certificates_path = 16 [(gogoproto.jsontag) = "trusted_system_certificates_path,omitempty"];
  repeated VolumeMount volume_mounts = 17 [(gogoproto.jsontag) = "volume_mounts,omitempty"];
  optional Network network = 18 [(gogoproto.jsontag) = "network,omitempty"];

  optional int64 start_timeout_ms = 19;

  optional CertificateProperties certificate_properties = 20 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "certificate_properties,omitempty"];

  optional string image_username = 21 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "image_username,omitempty"];
  optional string image_password = 22 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "image_password,omitempty"];

  optional CheckDefinition check_definition = 23 [(gogoproto.jsontag) = "check_definition,omitempty"];
}

// helper message for marshalling routes
message ProtoRoutes {
  map<string, bytes> routes = 1;
}

message DesiredLRPUpdate {
  optional int32 instances = 1 [(gogoproto.nullable) = true];
  optional ProtoRoutes routes = 2 [(gogoproto.nullable) = true, (gogoproto.customtype) = "Routes"];
  optional string annotation = 3 [(gogoproto.nullable) = true];
}

message DesiredLRPKey {
  optional string process_guid = 1;
  optional string domain = 2;
  optional string log_guid = 3;
}

message DesiredLRPResource {
  optional int32 memory_mb = 1;
  optional int32 disk_mb = 2;
  optional string root_fs = 3 [(gogoproto.jsontag) = "rootfs"];
  optional int32 max_pids = 4;
}

message DesiredLRP {
  optional string process_guid = 1;
  optional string domain = 2;
  optional string root_fs = 3 [(gogoproto.jsontag) = "rootfs"];
  optional int32 instances = 4;
  repeated EnvironmentVariable environment_variables = 5 [(gogoproto.jsontag) = "env"];
  optional Action setup = 6;
  optional Action action = 7;

  optional int64 start_timeout_ms = 27;
  optional uint32 deprecated_start_timeout_s = 8 [(gogoproto.jsontag) = "deprecated_timeout_ns,omitempty", deprecated=true];

  optional Action monitor = 9;
  optional int32 disk_mb = 10;
  optional int32 memory_mb = 11;
  optional uint32 cpu_weight = 12;
  optional bool privileged = 13;
  repeated uint32 ports = 14;
  optional ProtoRoutes routes = 15 [(gogoproto.nullable) = true, (gogoproto.customtype) = "Routes"];
  optional string log_source = 16;
  optional string log_guid = 17;
  optional string metrics_guid = 18;
  optional string annotation = 19;
  repeated SecurityGroupRule egress_rules = 20;
  optional ModificationTag modification_tag = 21;
  repeated CachedDependency cached_dependencies = 22 [(gogoproto.jsontag) = "cached_dependencies,omitempty"];
  optional string legacy_download_user = 23 [(gogoproto.jsontag) = "legacy_download_user,omitempty"];
  optional string trusted_system_certificates_path = 24 [(gogoproto.jsontag) = "trusted_system_certificates_path,omitempty"];
  repeated VolumeMount volume_mounts = 25 [(gogoproto.jsontag) = "volume_mounts,omitempty"];
  optional Network network = 26 [(gogoproto.jsontag) = "network,omitempty"];
  repeated string PlacementTags = 28 [(gogoproto.jsontag) ="placement_tags,omitempty"];
  optional int32 max_pids = 29;

  optional CertificateProperties certificate_properties = 30 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "certificate_properties,omitempty"];

  optional string image_username = 31 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "image_username,omitempty"];
  optional string image_password = 32 [(gogoproto.nullable) = false, (gogoproto.jsontag) = "image_password,omitempty"];

  optional CheckDefinition check_definition = 33 [(gogoproto.jsontag) = "check_definition,omitempty"];
}
