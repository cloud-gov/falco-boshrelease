// Code generated by counterfeiter. DO NOT EDIT.
package taskworkpoolfakes

import (
	"sync"

	"code.cloudfoundry.org/bbs/db"
	"code.cloudfoundry.org/bbs/events"
	"code.cloudfoundry.org/bbs/models"
	"code.cloudfoundry.org/bbs/taskworkpool"
)

type FakeTaskCompletionClient struct {
	SubmitStub        func(taskDB db.TaskDB, taskHub events.Hub, task *models.Task)
	submitMutex       sync.RWMutex
	submitArgsForCall []struct {
		taskDB  db.TaskDB
		taskHub events.Hub
		task    *models.Task
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeTaskCompletionClient) Submit(taskDB db.TaskDB, taskHub events.Hub, task *models.Task) {
	fake.submitMutex.Lock()
	fake.submitArgsForCall = append(fake.submitArgsForCall, struct {
		taskDB  db.TaskDB
		taskHub events.Hub
		task    *models.Task
	}{taskDB, taskHub, task})
	fake.recordInvocation("Submit", []interface{}{taskDB, taskHub, task})
	fake.submitMutex.Unlock()
	if fake.SubmitStub != nil {
		fake.SubmitStub(taskDB, taskHub, task)
	}
}

func (fake *FakeTaskCompletionClient) SubmitCallCount() int {
	fake.submitMutex.RLock()
	defer fake.submitMutex.RUnlock()
	return len(fake.submitArgsForCall)
}

func (fake *FakeTaskCompletionClient) SubmitArgsForCall(i int) (db.TaskDB, events.Hub, *models.Task) {
	fake.submitMutex.RLock()
	defer fake.submitMutex.RUnlock()
	return fake.submitArgsForCall[i].taskDB, fake.submitArgsForCall[i].taskHub, fake.submitArgsForCall[i].task
}

func (fake *FakeTaskCompletionClient) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.submitMutex.RLock()
	defer fake.submitMutex.RUnlock()
	copiedInvocations := map[string][][]interface{}{}
	for key, value := range fake.invocations {
		copiedInvocations[key] = value
	}
	return copiedInvocations
}

func (fake *FakeTaskCompletionClient) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ taskworkpool.TaskCompletionClient = new(FakeTaskCompletionClient)
